name: Windows-conda-CI

on: [push,pull_request]
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  visp-conda:
    name: ${{ matrix.os }} - Python ${{ matrix.python-version }} ${{ matrix.build_type }} ${{ matrix.cxx_options }}
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: ["windows-latest"]
        compiler: ["cl", "clang-cl"]
        build_type: [Release]
        python-version: ["3.11"]

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive

    - uses: conda-incubator/setup-miniconda@v3
      with:
        activate-environment: visp
        auto-update-conda: true
        environment-file: .github/workflows/conda/environment_windows.yml
        python-version: ${{ matrix.python-version }}
        auto-activate-base: false

    - name: Show conda config
      shell: cmd /C CALL {0}
      run: |
        conda info
        conda list
        conda config --show-sources
        conda config --show

    - name: Build visp python bindings
      shell: cmd /C CALL {0}
      env:
        CC: ${{ matrix.compiler }}
        CXX: ${{ matrix.compiler }}
      run: |
        :: start building
        call "%programfiles%\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build\vcvarsall.bat" amd64
        if errorlevel 1 exit 1

        mkdir build
        cd build

        cmake .. ^
          -G "Ninja" ^
          -DCMAKE_PREFIX_PATH=%CONDA_PREFIX% ^
          -DCMAKE_INSTALL_PREFIX=%CONDA_PREFIX%\Library ^
          -DPYTHON_SITELIB=%CONDA_PREFIX%\Lib\site-packages ^
          -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
        if errorlevel 1 exit 1

        cmake --build . --target visp_python_bindings
        if errorlevel 1 exit 1

        :: Build and Install
        cmake --build . --target install
        if errorlevel 1 exit 1

  check:
    if: always()
    name: check-windows-conda

    needs:
    - visp-conda

    runs-on: Ubuntu-latest

    steps:
    - name: Decide whether the needed jobs succeeded or failed
      uses: re-actors/alls-green@release/v1
      with:
        jobs: ${{ toJSON(needs) }}
