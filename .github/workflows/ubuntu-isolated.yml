# Isolated = build without 3rdparty and visp-images
name: Ubuntu-isolated

# https://www.jeffgeerling.com/blog/2020/running-github-actions-workflow-on-schedule-and-other-events
on:
  push:
  pull_request:
  schedule:
    - cron: '0 2 * * SUN'

jobs:
  build-ubuntu-dep-apt:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        compiler: [ {CC: /usr/bin/gcc, CXX: /usr/bin/g++} ]
        standard: [ 17 ]

    steps:
    # https://github.com/marketplace/actions/cancel-workflow-action
    - name: Cancel Previous Runs
      uses: styfle/cancel-workflow-action@0.9.1
      with:
        access_token: ${{ github.token }}

      # Remove some packages to emulate the ROS2 Jenkins environment
      # X11: https://raspberrypi.stackexchange.com/a/92334
      # Java: https://askubuntu.com/a/185531
      name: Remove packages
      run: |
        sudo apt-get install libomp-dev
        sudo apt purge --auto-remove 'x11-*'
        java -version
        sudo dpkg --list | grep -i jdk
        sudo dpkg --list | grep -i java
        sudo apt-get purge --auto-remove openjdk*
        sudo apt-get purge --auto-remove icedtea-* openjdk-*
        sudo dpkg --list | grep -i jdk
        sudo dpkg --list | grep -i java
        sudo apt purge --auto-remove 'libjpeg*'
        sudo apt purge --auto-remove 'libpng*'
        sudo apt purge --auto-remove 'libxml*'

    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Print system information
      run: lscpu

    - name: Print OS information
      run: lsb_release -a

    - name: Print compiler information
      run: dpkg --list | grep compiler

    - name: Configure CMake
      run: |
        mkdir build
        cd build
        CC=${{ matrix.compiler.CC }}
        CXX=${{ matrix.compiler.CXX }}
        CXX_STANDARD=${{ matrix.standard }}
        echo "CC: $CC"
        echo "CXX: $CXX"
        echo "Standard: $CXX_STANDARD"
        cmake .. -DCMAKE_C_COMPILER="${CC}" -DCMAKE_CXX_COMPILER="${CXX}" -DCMAKE_BUILD_TYPE=Release \
                 -DCMAKE_INSTALL_PREFIX=/tmp/usr/local -DCMAKE_VERBOSE_MAKEFILE=ON -DUSE_CXX_STANDARD=$CXX_STANDARD
        cat ViSP-third-party.txt

    - name: Compile
      working-directory: build
      run: |
        make -j$(nproc) install

    - name: Run unit tests
      working-directory: build
      run: ctest -j$(nproc) --output-on-failure
